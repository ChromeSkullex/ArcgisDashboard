"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[998],{40998:(e,t,a)=>{a.r(t),a.d(t,{submitTraceJob:()=>c,trace:()=>o});var r=a(3825),n=a(54994),s=a(57778);async function o(e,t,a){const o=(0,n.Dl)(e),c=t.toJSON();c.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(c.resultTypes=JSON.stringify(t.resultTypes));const i=(0,n.jV)(o.query,{query:(0,n.lF)({...c,f:"json"}),...a}),g="".concat(o.path,"/trace");return(0,r.A)(g,i).then((e=>function(e,t){const{data:a}=e,r=s.A.fromJSON(a.traceResults);return r.aggregatedGeometry&&t&&(r.aggregatedGeometry.line&&(r.aggregatedGeometry.line.spatialReference=t.clone()),r.aggregatedGeometry.multipoint&&(r.aggregatedGeometry.multipoint.spatialReference=t.clone()),r.aggregatedGeometry.polygon&&(r.aggregatedGeometry.polygon.spatialReference=t.clone())),r}(e,t.outSpatialReference)))}async function c(e,t,a){const s=(0,n.Dl)(e),o=t.toJSON();o.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(o.resultTypes=JSON.stringify(t.resultTypes));const c=(0,n.jV)(s.query,{query:(0,n.lF)({...o,async:!0,f:"json"}),...a}),i="".concat(s.path,"/trace"),{data:g}=await(0,r.A)(i,c);return g.statusUrl}}}]);
//# sourceMappingURL=998.ec0c9d1f.chunk.js.map